[package]
name = "ApiTemple"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "ApiTemple"
path = "src/main.rs"

#[build]
#target = "x86_64-unknown-linux-musl"

# Uncomment below to support Rust cross-compilation from macOS to Linux
# Follow these installation instructions: https://github.com/chinedufn/cross-compile-rust-from-mac-to-linux
# [target.x86_64-unknown-linux-musl]
# linker = "x86_64-unknown-linux-gnu-gcc"

[dependencies]
axum = { version = "0.7.5", features = [ "macros", "json", "multipart" ] }
axum-extra = { version = "0.9.3", features = ["multipart"]}
clap = { version = "4.5.17", features = ["derive"] }
config = "0.14.0"
secrecy = { version = "0.8.0", features = ["serde"] }
serde = "1.0.210"
serde_json = "1.0.128"
tokio = { version = "1.40.0", features = ["full"] }
tower-http = { version = "0.5.2", features = ["trace", "cors"] }
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
tracing-appender = "0.2"
log = "0.4.22"
axum-macros = "0.4.1"
jsonwebtoken = "8.0"
chrono = "0.4.24"
bcrypt = "0.10.1"
rand = "0.8.5"
uuid = { version = "1.5.0", features = ["v4"] }
base64 = "0.22.1"
reqwest = { version = "0.12.5", features = ["json", "multipart"] }

[dependencies.sqlx]
version = "0.8.2"
default-features = false
features = [
    "chrono",               # Have a Postgres data type be convertible to `DateTime<Utc>`.
    "macros",               # Have access to `sqlx::query!` and `sqlx::query_as!` macros.
    "migrate",              # Ability to programmatically manage database migrations.
    "postgres",             # Use PostgreSQL specific features (such as non-standard SQL type).
    "runtime-tokio-rustls", # Use Tokio runtime for its futures and rustls as TLS backend.
    "uuid"                  # Add support for mapping SQL UUID to Uuid type from `uuid` create.
]

